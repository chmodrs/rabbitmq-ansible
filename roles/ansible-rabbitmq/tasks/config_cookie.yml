---
- name: "[RabbitMQ] Check if the cookie file exist on master nodes"
  stat:
    path: "/var/lib/rabbitmq/.erlang.cookie"
  register: stat_rabbitmq_cookie
  changed_when: false
  when:
    - not rabbitmq_slave_of

- name: "[RabbitMQ] Generate erlang cookie for master nodes if needed"
  shell: |
    set -o pipefail; head -c 2500 /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 32 | base64
  args:
    executable: /bin/bash
  register: tmp_rabbitmq_cookie
  changed_when: false
  when:
    - not rabbitmq_slave_of
    - not stat_rabbitmq_cookie.stat.exists

- name: "[RabbitMQ] Copy erlang cookie to master nodes if needed"
  copy:
    content: "{{ tmp_rabbitmq_cookie.stdout }}"
    dest: /var/lib/rabbitmq/.erlang.cookie
    mode: 0400
    owner: rabbitmq
    group: rabbitmq
  notify: restart rabbitmq
  when:
    - not rabbitmq_slave_of
    - not stat_rabbitmq_cookie.stat.exists

- name: "[RabbitMQ] Get cookie from master nodes"
  slurp:
    src: /var/lib/rabbitmq/.erlang.cookie
  delegate_to: "{{ rabbitmq_slave_of | d('') }}"
  register: rabbitmq_cookie
  changed_when: false
  when:
    - rabbitmq_slave_of is not none
    - rabbitmq_slave_of | trim | length > 0

- name: "[RabbitMQ] Update cookie on slaves"
  copy:
    content: "{{ rabbitmq_cookie.content | b64decode }}"
    dest: /var/lib/rabbitmq/.erlang.cookie
    mode: 0400
    owner: rabbitmq
    group: rabbitmq
  register: rabbitmq_update_cookie
  notify: restart rabbitmq
  when:
    - rabbitmq_slave_of is not none
    - rabbitmq_slave_of | trim | length > 0
